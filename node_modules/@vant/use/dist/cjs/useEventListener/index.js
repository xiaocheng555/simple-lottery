"use strict";

exports.__esModule = true;
exports.useEventListener = useEventListener;

var _vue = require("vue");

var _onMountedOrActivated = require("../onMountedOrActivated");

var _utils = require("../utils");

function useEventListener(type, listener, options = {}) {
  if (!_utils.inBrowser) {
    return;
  }

  var {
    target = window,
    passive = false,
    capture = false
  } = options;
  var attached;

  var add = target => {
    var element = (0, _vue.unref)(target);

    if (element && !attached) {
      element.addEventListener(type, listener, {
        capture,
        passive
      });
      attached = true;
    }
  };

  var remove = target => {
    var element = (0, _vue.unref)(target);

    if (element && attached) {
      element.removeEventListener(type, listener, capture);
      attached = false;
    }
  };

  (0, _vue.onUnmounted)(() => remove(target));
  (0, _vue.onDeactivated)(() => remove(target));
  (0, _onMountedOrActivated.onMountedOrActivated)(() => add(target));

  if ((0, _vue.isRef)(target)) {
    (0, _vue.watch)(target, (val, oldVal) => {
      remove(oldVal);
      add(val);
    });
  }
}